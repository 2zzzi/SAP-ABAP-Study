*&---------------------------------------------------------------------*
*& Report ZEDR05_20230327
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEDR05_20230327.


**인터널 테이블 값할당 - 노가다로 할당
*DATA : BEGIN OF GS_STUDENT,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GS_STUDENT.
*
*DATA : BEGIN OF GS_STUDENT2,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GS_STUDENT2.
*
*DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.
*DATA : GT_STUDENT2 LIKE TABLE OF GS_STUDENT2.
*
*GS_STUDENT-ZCODE = 'SSU-001'.
*GS_STUDENT-ZKNAME = '강동원'.
*GS_STUDENT-ZENAME = 'DONG'.
*
*GS_STUDENT2-ZCODE = 'SSU-001'.
*GS_STUDENT2-ZKNAME = '강동원'.
*GS_STUDENT2-ZENAME = 'DONG'.
*
*APPEND GS_STUDENT TO GT_STUDENT.
*APPEND GS_STUDENT2 TO GT_STUDENT2.
*
*BREAK-POINT.

*"인터널 테이블 값할당 - MOVE로 헤더카피
*DATA : BEGIN OF GS_STUDENT,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GS_STUDENT.
*
*DATA : BEGIN OF GS_STUDENT2,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GS_STUDENT2.
*
*DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.
*DATA : GT_STUDENT2 LIKE TABLE OF GS_STUDENT2.
*
*GS_STUDENT-ZCODE = 'SSU-001'.
*GS_STUDENT-ZKNAME = '강동원'.
*GS_STUDENT-ZENAME = 'DONG'.
*
*APPEND GS_STUDENT TO GT_STUDENT.
*
*BREAK-POINT.
*
*MOVE GS_STUDENT TO GS_STUDENT2.
*
*BREAK-POINT.
*
*APPEND GS_STUDENT2 TO GT_STUDENT2.
*
*BREAK-POINT.


*"인터널 테이블 값할당 - MOVE로 바디카피
*DATA : BEGIN OF GS_STUDENT,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GS_STUDENT.
*
*DATA : GT_STUDENT LIKE TABLE OF GS_STUDENT.
*DATA : GT_STUDENT2 LIKE TABLE OF GS_STUDENT.
*
*GS_STUDENT-ZCODE = 'SSU-001'.
*GS_STUDENT-ZKNAME = '강동원'.
*GS_STUDENT-ZENAME = 'DONG'.
*
*APPEND GS_STUDENT TO GT_STUDENT.
*
*BREAK-POINT.
*
*MOVE GT_STUDENT[] TO GT_STUDENT2[]. "인터널테이블의 바디 복사
*
*BREAK-POINT.

*"인터널 테이블 값할당 - 헤더라인을 포함한 ITAB - 바디 카피
*DATA : BEGIN OF GT_STUDENT OCCURS 0,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GT_STUDENT.
*
*DATA : BEGIN OF GT_STUDENT2 OCCURS 0,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GT_STUDENT2.
*
*GT_STUDENT-ZCODE = 'SSU-001'.
*GT_STUDENT-ZKNAME = '강동원'.
*GT_STUDENT-ZENAME = 'DONG'.
*
*APPEND GT_STUDENT.
*
*BREAK-POINT.
*
*MOVE GT_STUDENT[] TO GT_STUDENT2[]. "GT_STUDENT2의 헤더는 비어있다.
*
*BREAK-POINT.

*"인터널 테이블 값할당 - 헤더라인을 포함한 ITAB - MOVE-CORRESPONDING
*DATA : BEGIN OF GT_STUDENT OCCURS 0,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*  ZCLASS TYPE C,
*END OF GT_STUDENT.
*
*DATA : BEGIN OF GT_STUDENT2 OCCURS 0,
*  ZCLASS TYPE C,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*END OF GT_STUDENT2.
*
*GT_STUDENT-ZCODE = 'SSU-001'.
*GT_STUDENT-ZKNAME = '강동원'.
*GT_STUDENT-ZENAME = 'DONG'.
*
*APPEND GT_STUDENT.
*
*MOVE-CORRESPONDING GT_STUDENT[] TO GT_STUDENT2[]. "GT_STUDENT2의 헤더는 비어있다.
*
*BREAK-POINT.

*"인터널 테이블 값할당 - 헤더라인을 포함한 ITAB - MOVE-CORRESPONDING
*DATA : BEGIN OF GT_STUDENT OCCURS 0,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*END OF GT_STUDENT.
*
*DATA : BEGIN OF GT_STUDENT2 OCCURS 0,
*  ZCLASS TYPE C,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*END OF GT_STUDENT2.
*
*GT_STUDENT-ZCODE = 'SSU-001'.
*GT_STUDENT-ZKNAME = '강동원'.
*GT_STUDENT-ZENAME = 'DONG'.
*
*APPEND GT_STUDENT.
*
*MOVE-CORRESPONDING GT_STUDENT TO GT_STUDENT2.
*
*APPEND GT_STUDENT2. "BODY에 적재하기 위해 APPEND필요
*
*BREAK-POINT.

*----------------------INTERNAL TABLE 초기화 ---------------------------*

*"CLEAR : 인터널테이블의 내용을 지우고 할당된 메모리공간을 반환
*" 헤더라인이 없는 인터널테이블 바디클리어
*DATA : BEGIN OF GS_STUDENT,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*END OF GS_STUDENT.
*
*DATA GT_STUDENT LIKE TABLE OF GS_STUDENT.
*
*GS_STUDENT-ZCODE = 'SSU-001'.
*GS_STUDENT-ZKNAME = '강동원'.
*GS_STUDENT-ZENAME = 'DONG'.
*
*APPEND GS_STUDENT TO GT_STUDENT.
*
*BREAK-POINT.
*
*CLEAR : GT_STUDENT. "헤더만 지우고 바디는 살아있음
*
*BREAK-POINT.


*" 헤더라인이 있는 인터널테이블 헤더클리어
*DATA : BEGIN OF GT_STUDENT OCCURS 0,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*END OF GT_STUDENT.
*
*GT_STUDENT-ZCODE = 'SSU-001'.
*GT_STUDENT-ZKNAME = '강동원'.
*GT_STUDENT-ZENAME = 'DONG'.
*
*APPEND GT_STUDENT.
*
*BREAK-POINT.
*
*CLEAR GT_STUDENT[]. "바디만 지우고 헤더는 살아있음
*
*BREAK-POINT.

*" REFRESH : 인터널테이블의 데이터만 지우고, 메모리공간은 그대로
*DATA : BEGIN OF GT_STUDENT OCCURS 0,
*  ZCODE TYPE C LENGTH 10,
*  ZKNAME TYPE C LENGTH 10,
*  ZENAME TYPE C LENGTH 10,
*END OF GT_STUDENT.
*
*GT_STUDENT-ZCODE = 'SSU-001'.
*GT_STUDENT-ZKNAME = '강동원'.
*GT_STUDENT-ZENAME = 'DONG'.
*
*APPEND GT_STUDENT.
*
*BREAK-POINT.
*
*REFRESH : GT_STUDENT[].
*
*BREAK-POINT.

" REFRESH : 인터널테이블의 데이터만 지우고, 메모리공간은 그대로
DATA : BEGIN OF GT_STUDENT OCCURS 0,
  ZCODE TYPE C LENGTH 10,
  ZKNAME TYPE C LENGTH 10,
  ZENAME TYPE C LENGTH 10,
END OF GT_STUDENT.

GT_STUDENT-ZCODE = 'SSU-001'.
GT_STUDENT-ZKNAME = '강동원'.
GT_STUDENT-ZENAME = 'DONG'.

BREAK-POINT.

APPEND GT_STUDENT.

GT_STUDENT-ZCODE = 'SSU-002'.
GT_STUDENT-ZKNAME = '강동투'.
GT_STUDENT-ZENAME = 'DDONG'.

APPEND GT_STUDENT.

BREAK-POINT.

FREE : GT_STUDENT[].

BREAK-POINT.